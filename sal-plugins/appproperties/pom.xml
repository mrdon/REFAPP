<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.atlassian.refapp</groupId>
        <artifactId>sal-refimpl-plugins</artifactId>
        <version>2.6.0-ao-2-SNAPSHOT</version>
    </parent>

    <artifactId>sal-refimpl-appproperties-plugin</artifactId>
    <name>Shared Application Access Layer Reference Implementation ApplicationProperties Plugin</name>
    <packaging>bundle</packaging>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Bundle-SymbolicName>com.atlassian.sal.refimpl.appproperties</Bundle-SymbolicName>
                        <!--
                          - Atlassian Core has a bunch of dependencies that we aren't using and don't want to pull in.
                          - The *;resolution:="optional" directive will mark those scanned imports as optional so that
                          - they don't have to be present at runtime.
                          -->
                        <Import-Package>com.atlassian.sal.api, javax.servlet*, *;resolution:="optional"</Import-Package>
                        <Private-Package>com.atlassian.sal.refimpl, com.atlassian.core.filters</Private-Package>
                        <Spring-Context>*;timeout:=60</Spring-Context>
                    </instructions>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>com.atlassian.sal</groupId>
            <artifactId>sal-api</artifactId>
            <version>${sal.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <!--
              - Only using ServletContextThreadLocal and ServletContextThreadLocalFilter
              - If you need other classes from atlassian-core, you'll probably need to modify the bundle instructions
              - above, or you may encounter runtime class loading errors
              -->
            <groupId>com.atlassian.core</groupId>
            <artifactId>atlassian-core</artifactId>
            <version>4.5</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.3</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
</project>